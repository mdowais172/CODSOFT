#include <bits/stdc++.h>
using namespace std;
int currentPlayer;
char currentMarker;
char board[3][3] = {{'1', '2', '3'}, {'4', '5', '6'}, {'7', '8', '9'}};

void drawBoard()
{
    cout << " " << board[0][0] << " | " << board[0][1] << " | " << board[0][2] << endl;
    cout << "---|---|---" << endl;
    cout << " " << board[1][0] << " | " << board[1][1] << " | " << board[1][2] << endl;
    cout << "---|---|---" << endl;
    cout << " " << board[2][0] << " | " << board[2][1] << " | " << board[2][2] << endl;
    cout << "---|---|---" << endl;
}

bool placeMarker(int slot)
{
    int row = (slot - 1) / 3;
    int col = (slot - 1) % 3;

    if (board[row][col] == 'X' || board[row][col] == 'O')
    {
        return false; // already taken
    }

    board[row][col] = currentMarker;
    return true;
}

int checkWinner()
{
    // check rows and columns
    for (int i = 0; i < 3; i++)
    {
        if (board[i][0] == board[i][1] && board[i][1] == board[i][2])
            return currentPlayer;
        if (board[0][i] == board[1][i] && board[1][i] == board[2][i])
            return currentPlayer;
    }

    // check diagonals
    if (board[0][0] == board[1][1] && board[1][1] == board[2][2])
        return currentPlayer;
    if (board[0][2] == board[1][1] && board[1][1] == board[2][0])
        return currentPlayer;

    return 0; // no winner yet
}

void swapPlayer()
{
    if (currentPlayer == 1)
    {
        currentPlayer = 2;
        currentMarker = (currentMarker == 'X') ? 'O' : 'X';
    }
    else
    {
        currentPlayer = 1;
        currentMarker = (currentMarker == 'X') ? 'O' : 'X';
    }
}

void game()
{
    cout << "Player1 choose your marker: X OR 0" << endl;
    char markerP1;
    cin >> markerP1;

    currentPlayer = 1;
    currentMarker = markerP1;

    drawBoard();

    int winner = 0;
    for (int turn = 0; turn < 9; turn++)
    {
        cout << "Player " << currentPlayer << "'s turn. Enter your slot (1-9): ";
        int slot;
        cin >> slot;

        if (slot < 1 || slot > 9)
        {
            cout << "Invalid slot. Try again.\n";
            turn--;
            continue;
        }

        if (!placeMarker(slot))
        {
            cout << "Slot already taken. Try again.\n";
            turn--;
            continue;
        }

        drawBoard();

        winner = checkWinner();
        if (winner != 0)
        {
            cout << "Player " << winner << " wins!\n";
            return;
        }

        swapPlayer();
    }

    cout << "It's a draw!\n";
}
int main()
{
    game();

    return 0;
}
